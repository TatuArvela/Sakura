{"version":3,"sources":["ts/index.ts"],"names":[],"mappings":"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","file":"ts.841fc46b.js","sourceRoot":"../src","sourcesContent":["// Mathgame variables\n\nlet screenWidth: number = 16;\nlet screenScroll = setInterval(null);\nlet ops: string[] = ['+', '-', '×', '÷'];\n\nlet op: string;\nlet mode: string;\nlet level: string;\n\nlet num01: number;\nlet num02: number;\nlet score: number;\nlet goal: number;\nlet answer: number;\nlet userAnswer: string;\n\nlet randomMin: number;\nlet randomMax: number;\nlet maxDecimals: number;\nlet acceptNumbers: boolean;\n\n\n// DEFAULTS\n\nmode = '+';\nsetLevel('EASY');\n\n\n// FUNCTIONS\n\nfunction runGame(_mode: string) {\n  mode = _mode;\n  if (mode === '+-×÷') {\n    op = ops[Math.floor(Math.random()*ops.length)];\n  }\n  else {\n    op = mode;\n  }\n  \n  randomizeNumbers();\n  answer = 0;\n  userAnswer = '';\n  \n  switch(op) {\n    case '+':\n      answer = num01 + num02;\n      break;\n    case '-':\n      answer = num01 - num02;\n      break;\n    case '×':\n      answer = num01 * num02;\n      break;\n    case '÷':\n      answer = num01 / num02;\n      // If the answer has more than wanted maximum decimal places, a new task is calculated\n      while (getDecimalPlaces(answer) > maxDecimals) {\n          randomizeNumbers();\n          answer = num01 / num02;\n      }\n      break;\n  }\n  acceptNumbers = true;\n  drawProblem();\n  drawLevel();\n  drawMode();\n  drawScore();\n}\n\n\nfunction randomizeNumbers() {\n  let newNum01 = Math.floor(Math.random() * (randomMax + 1 - randomMin) + randomMin);\n  let newNum02 = Math.floor(Math.random() * (randomMax + 1 - randomMin) + randomMin);\n  \n  if (\n    (newNum01 == num01) && (newNum02 == num02)\n  ) {\n    randomizeNumbers();\n  }\n  else {\n    num01 = newNum01;\n    num02 = newNum02;\n  }\n}\n\n\nfunction getDecimalPlaces(number: number) {\n  return ((+number).toFixed(20)).replace(/^-?\\d*\\.?|0+$/g, '').length;\n}\n\n\nfunction setLevel(newLevel: String) {\n  score = 0;\n  switch(newLevel) {\n    case 'EASY':\n      level = 'EASY';\n      goal = 10;\n      randomMin = 2;\n      randomMax = 10;\n      maxDecimals = 1;\n      break;\n    case 'MEDI':\n      level = 'MEDI';\n      goal = 20;\n      randomMin = 3;\n      randomMax = 12;\n      maxDecimals = 1;\n      break;\n    case 'HARD':\n      level = 'HARD';\n      goal = 30;\n      randomMin = 5;\n      randomMax = 20;\n      maxDecimals = 1;\n      break;\n    case 'XTRM':\n      level = 'XTRM';\n      goal = 99;\n      randomMin = 10;\n      randomMax = 24;\n      maxDecimals = 2;\n      break;\n  }\n  runGame(mode);\n}\n\n\nfunction check() {\n  if(answer === parseFloat(userAnswer)) {\n    score++;\n    if (score < goal) {\n      runGame(mode);\n    }\n    else {\n      win();\n    }\n  }\n  else {\n    lose();\n  }\n}\n\n\nfunction screenHasSpaceForContent(content: string) {\n  const problem: string = num01 + op + num02 + '=';\n  const screenContent: string = problem + content;\n\n  return screenContent.length <= screenWidth;\n}\n\nfunction enterNumber(number: string) {\n  if (acceptNumbers)\n    if (screenHasSpaceForContent(userAnswer+number)) {\n      userAnswer += number;\n      drawProblem();\n      display('main', 'add', userAnswer);\n    }\n}\n\n\nfunction undo() {\n  if (acceptNumbers) {\n    if (userAnswer.length > 0) {\n      userAnswer = userAnswer.substring(0, userAnswer.length - 1);\n      drawProblem();\n      display('main', 'add', userAnswer);\n    }\n  }\n}\n\n\nfunction minus() {\n  if (acceptNumbers) {\n    if ((userAnswer.length > 0) && parseFloat(userAnswer)) {\n      userAnswer = String(parseFloat(userAnswer) * -1);\n      drawProblem();\n      display('main', 'add', userAnswer);\n    }\n    else if (userAnswer.length == 0){\n      userAnswer += '-';\n      drawProblem();\n      display('main', 'add', userAnswer);\n    }\n  }\n}\n\n\n// INPUTS\n\nconst buttons = document.querySelectorAll('[id^=button]');\n[].forEach.call(buttons, function(button: HTMLElement) {\n  button.addEventListener('click', function() {\n    switch(button.getAttribute('id')) {\n      \n      // NUMPAD\n      case 'button-point':\n        if (userAnswer.indexOf('.') == -1) {\n          enterNumber('.');\n        }\n        break;\n      case 'button-0':\n        enterNumber('0');\n        break;\n      case 'button-1':\n        enterNumber('1');\n        break;\n      case 'button-2':\n        enterNumber('2');\n        break;\n      case 'button-3':\n        enterNumber('3');\n        break;\n      case 'button-4':\n        enterNumber('4');\n        break;\n      case 'button-5':\n        enterNumber('5');\n        break;\n      case 'button-6':\n        enterNumber('6');\n        break;\n      case 'button-7':\n        enterNumber('7');\n        break;\n      case 'button-8':\n        enterNumber('8');\n        break;\n      case 'button-9':\n        enterNumber('9');\n        break;\n\n      // FUNCTIONS\n      case 'button-minus':\n        minus();\n        break;\n      case 'button-check':\n        check();\n        break;\n      case 'button-undo':\n        undo();\n        break;\n\n      // LEVELS\n      case 'button-easy':\n        setLevel('EASY');\n        runGame(mode);\n        break;\n      case 'button-medi':\n        setLevel('MEDI');\n        runGame(mode);\n        break;\n      case 'button-hard':\n        setLevel('HARD');\n        runGame(mode);\n        break;\n      case 'button-xtrm':\n        setLevel('XTRM');\n        runGame(mode);\n        break;\n\n      // OPTIONS\n      case 'button-division':\n        score = 0;\n        runGame('÷');\n        break;\n      case 'button-multiplication':\n        score = 0;\n        runGame('×');\n        break;\n      case 'button-subtraction':\n        score = 0;\n        runGame('-');\n        break;\n      case 'button-addition':\n        score = 0;\n        runGame('+');\n        break;\n      case 'button-all':\n        score = 0;\n        runGame('+-×÷');\n        break;\n      }\n  });\n});\n\n\n// OUTPUT\n\nfunction drawProblem() {\n  display(\n    'main',\n    'replace',\n    num01 + op + num02 + '='\n  );\n}\n\n\nfunction drawLevel() {\n  display(\n    'level',\n    'replace',\n    level\n  );\n}\n\n\nfunction drawMode() {\n  display(\n    'mode',\n    'replace',\n    mode\n  );\n}\n\n\nfunction drawScore() {\n  display(\n    'score',\n    'replace',\n    score + '/' + goal\n  );\n}\n\n\nfunction win() {\n  acceptNumbers = false;\n  drawScore();\n  display(\n    'main',\n    'startscroll',\n    'ALL\\xa0RIGHT!'\n  );\n}\n\n\nfunction lose() {\n  acceptNumbers = false;\n  drawScore();\n  display(\n    'main',\n    'startscroll',\n    'WRONG!'\n  );\n}\n\n\nfunction display(target: string, method: string, input: string, keepScrolling?: boolean) {\n  if (!keepScrolling) {\n    clearInterval(screenScroll);\n  }\n\n  let element;\n  switch(target) {\n    case 'main':\n      element = document.getElementById( 'screen-mathgame-main' );\n      break;\n    case 'level':\n      element = document.getElementById( 'screen-mathgame-level' );\n      break;\n    case 'mode':\n      element = document.getElementById( 'screen-mathgame-mode' );\n      break;\n    case 'score':\n      element = document.getElementById( 'screen-mathgame-score' );\n      break;\n    default:\n      return false;\n  }\n  \n  let output = '';\n  switch(method) {\n      case 'add':\n        output = element.innerHTML + input;\n        element.innerHTML = output.substring(0,screenWidth);\n        break;\n      case 'replace':\n        output = input;\n        element.innerHTML = output.substring(0,screenWidth);\n        break;\n      case 'startscroll':\n        drawScore();\n        const padding = Array(screenWidth + 1).join('\\xa0');\n        input = (input + padding).substring(0, padding.length);\n        screenScroll = setInterval(function () {\n          input = input[input.length - 1] + input.substring(0, input.length - 1);\n          display('main', 'replace', input, true);\n        }, 200);\n        break;\n      default:\n        return false;\n  }\n}"]}